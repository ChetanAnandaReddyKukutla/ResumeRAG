# Render Blueprint for ResumeRAG Backend
# https://render.com/docs/blueprint-spec

services:
  # ============================================
  # Web Service: FastAPI Backend
  # ============================================
  - type: web
    name: resumerag-api
    runtime: python
    plan: starter  # Change to 'standard' or 'pro' for production
    region: oregon  # Change to your preferred region
    branch: main
    rootDir: api
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    
    envVars:
      # Database
      - key: DATABASE_URL
        fromDatabase:
          name: resumerag-db
          property: connectionString
      
      # Redis
      - key: REDIS_URL
        fromService:
          type: redis
          name: resumerag-redis
          property: connectionString
      
      # Security (Generate these with Python - see DEPLOYMENT.md)
      - key: SECRET_KEY
        generateValue: true
        sync: false
      
      - key: FERNET_KEY
        generateValue: true
        sync: false
      
      # JWT
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: 30
      
      - key: REFRESH_TOKEN_EXPIRE_DAYS
        value: 7
      
      # Account Security
      - key: MAX_LOGIN_ATTEMPTS
        value: 5
      
      - key: LOCKOUT_DURATION_MINUTES
        value: 15
      
      # Upload Limits
      - key: MAX_UPLOAD_SIZE_MB
        value: 10
      
      # Rate Limiting
      - key: RATE_LIMIT_PER_MINUTE
        value: 60
      
      # Environment
      - key: ENVIRONMENT
        value: production
      
      # CORS (Update with your frontend domain)
      - key: CORS_ORIGINS
        value: https://resumerag.vercel.app,https://www.resumerag.com
      
      # Observability (Optional - add your OTLP endpoint)
      - key: OTLP_ENDPOINT
        value: ""  # e.g., https://api.honeycomb.io
      
      - key: OTLP_HEADERS
        value: ""  # e.g., x-honeycomb-team=YOUR_API_KEY
    
    autoDeploy: true
    
    disk:
      name: resumerag-uploads
      mountPath: /var/uploads
      sizeGB: 10

  # ============================================
  # Background Worker: RQ Worker
  # ============================================
  - type: worker
    name: resumerag-worker
    runtime: python
    plan: starter
    region: oregon
    branch: main
    rootDir: workers
    buildCommand: pip install -r ../api/requirements.txt
    startCommand: python worker.py
    
    envVars:
      # Inherit from main service
      - fromService:
          type: web
          name: resumerag-api
          envVarKey: DATABASE_URL
      
      - fromService:
          type: web
          name: resumerag-api
          envVarKey: REDIS_URL
      
      - fromService:
          type: web
          name: resumerag-api
          envVarKey: FERNET_KEY
      
      - key: ENVIRONMENT
        value: production
    
    autoDeploy: true

# ============================================
# Databases
# ============================================
databases:
  # PostgreSQL with pgvector
  - name: resumerag-db
    plan: starter  # 256MB RAM, 1GB storage - upgrade for production
    region: oregon
    databaseName: resumerag
    user: resumerag
    ipAllowList: []  # Empty = allow from Render services only
    
    # Post-creation: Enable pgvector extension
    # Run: CREATE EXTENSION IF NOT EXISTS vector;

# ============================================
# Redis
# ============================================
redis:
  - name: resumerag-redis
    plan: starter  # 25MB - upgrade for production
    region: oregon
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []
