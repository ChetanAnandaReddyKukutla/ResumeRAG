version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg14
    container_name: resumerag_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: resumerag
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - resumerag-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: resumerag_redis
    ports:
      - "6379:6379"
    networks:
      - resumerag-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: resumerag_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - resumerag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: resumerag_api
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/resumerag
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
      CORS_ALLOWED_ORIGINS: "*"
      PGVECTOR_DIM: "1536"
      USE_WORKER: "false"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../api:/app
      - uploads:/app/uploads
    networks:
      - resumerag-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: resumerag_frontend
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - resumerag-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  resumerag-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  uploads:
